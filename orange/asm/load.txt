
./build/load_all.elf:     file format elf32-i386


Disassembly of section .text:

00008000 <_start>:
    8000:	e9 9f 01 90 90       	jmp    909081a4 <_end+0x908fef10>
    8005:	fa                   	cli
    8006:	0f 20 c0             	mov    %cr0,%eax
    8009:	66 83 c8 01          	or     $0x1,%ax
    800d:	0f 22 c0             	mov    %eax,%cr0
    8010:	0f 01 16             	lgdtl  (%esi)
    8013:	34 92                	xor    $0x92,%al
    8015:	ea                   	.byte 0xea
    8016:	1a                   	.byte 0x1a
    8017:	80 08 00             	orb    $0x0,(%eax)

0000801a <protect_mode_entry>:
    801a:	66 b8 10 00          	mov    $0x10,%ax
    801e:	8e d8                	mov    %eax,%ds
    8020:	8e d0                	mov    %eax,%ss
    8022:	8e c0                	mov    %eax,%es
    8024:	8e e0                	mov    %eax,%fs
    8026:	8e e8                	mov    %eax,%gs
    8028:	e9 b5 01 00 00       	jmp    81e2 <die>

0000802d <show_msg>:
    802d:	66 55                	push   %bp
    802f:	66 89 e5             	mov    %sp,%bp
    8032:	66 83 ec 10          	sub    $0x10,%sp
    8036:	eb 0c                	jmp    8044 <show_msg+0x17>
    8038:	67 66 0f b6 45 ff    	movzbw -0x1(%di),%ax
    803e:	b4 0e                	mov    $0xe,%ah
    8040:	88 c0                	mov    %al,%al
    8042:	cd 10                	int    $0x10
    8044:	67 66 8b 45 08       	mov    0x8(%di),%ax
    8049:	67 66 8d 50 01       	lea    0x1(%bx,%si),%dx
    804e:	67 66 89 55 08       	mov    %dx,0x8(%di)
    8053:	67 66 0f b6 00       	movzbw (%bx,%si),%ax
    8058:	67 88 45 ff          	mov    %al,-0x1(%di)
    805c:	67 80 7d ff 00       	cmpb   $0x0,-0x1(%di)
    8061:	75 d5                	jne    8038 <show_msg+0xb>
    8063:	90                   	nop
    8064:	90                   	nop
    8065:	66 c9                	leavew
    8067:	66 c3                	retw

00008069 <detect_memory>:
    8069:	66 55                	push   %bp
    806b:	66 89 e5             	mov    %sp,%bp
    806e:	66 57                	push   %di
    8070:	66 56                	push   %si
    8072:	66 53                	push   %bx
    8074:	66 83 ec 30          	sub    $0x30,%sp
    8078:	67 66 c7 45 f0 00 00 	movw   $0x0,-0x10(%di)
    807f:	00 00                	add    %al,(%eax)
    8081:	66 68 e7 81          	pushw  $0x81e7
    8085:	00 00                	add    %al,(%eax)
    8087:	66 e8 a0 ff          	callw  802b <protect_mode_entry+0x11>
    808b:	ff                   	(bad)
    808c:	ff 66 83             	jmp    *-0x7d(%esi)
    808f:	c4 04 66             	les    (%esi,%eiz,2),%eax
    8092:	c7 06 90 92 00 00    	movl   $0x9290,(%esi)
    8098:	00 00                	add    %al,(%eax)
    809a:	67 66 c7 45 ec 00 00 	movw   $0x0,-0x14(%di)
    80a1:	00 00                	add    %al,(%eax)
    80a3:	e9 d0 00 67 66       	jmp    66678178 <_end+0x6666eee4>
    80a8:	8d 45 c8             	lea    -0x38(%ebp),%eax
    80ab:	67 66 89 45 e8       	mov    %ax,-0x18(%di)
    80b0:	66 b8 20 e8          	mov    $0xe820,%ax
    80b4:	00 00                	add    %al,(%eax)
    80b6:	67 66 8b 5d f0       	mov    -0x10(%di),%bx
    80bb:	66 b9 18 00          	mov    $0x18,%cx
    80bf:	00 00                	add    %al,(%eax)
    80c1:	66 ba 50 41          	mov    $0x4150,%dx
    80c5:	4d                   	dec    %ebp
    80c6:	53                   	push   %ebx
    80c7:	67 66 8b 75 e8       	mov    -0x18(%di),%si
    80cc:	66 89 f7             	mov    %si,%di
    80cf:	cd 15                	int    $0x15
    80d1:	66 89 da             	mov    %bx,%dx
    80d4:	67 66 89 45 e4       	mov    %ax,-0x1c(%di)
    80d9:	67 66 89 4d e0       	mov    %cx,-0x20(%di)
    80de:	67 66 89 55 f0       	mov    %dx,-0x10(%di)
    80e3:	67 66 81 7d e4 50 41 	cmpw   $0x4150,-0x1c(%di)
    80ea:	4d                   	dec    %ebp
    80eb:	53                   	push   %ebx
    80ec:	74 13                	je     8101 <detect_memory+0x98>
    80ee:	66 68 fd 81          	pushw  $0x81fd
    80f2:	00 00                	add    %al,(%eax)
    80f4:	66 e8 33 ff          	callw  802b <protect_mode_entry+0x11>
    80f8:	ff                   	(bad)
    80f9:	ff 66 83             	jmp    *-0x7d(%esi)
    80fc:	c4 04 e9             	les    (%ecx,%ebp,8),%eax
    80ff:	92                   	xchg   %eax,%edx
    8100:	00 67 66             	add    %ah,0x66(%edi)
    8103:	83 7d e0 14          	cmpl   $0x14,-0x20(%ebp)
    8107:	7e 13                	jle    811c <detect_memory+0xb3>
    8109:	67 66 8b 45 e8       	mov    -0x18(%di),%ax
    810e:	67 66 8b 40 14       	mov    0x14(%bx,%si),%ax
    8113:	66 83 e0 01          	and    $0x1,%ax
    8117:	66 85 c0             	test   %ax,%ax
    811a:	74 53                	je     816f <detect_memory+0x106>
    811c:	67 66 8b 45 e8       	mov    -0x18(%di),%ax
    8121:	67 66 8b 40 10       	mov    0x10(%bx,%si),%ax
    8126:	66 83 f8 01          	cmp    $0x1,%ax
    812a:	75 39                	jne    8165 <detect_memory+0xfc>
    812c:	66 a1 90 92 67 66    	mov    0x66679290,%ax
    8132:	8b 55 e8             	mov    -0x18(%ebp),%edx
    8135:	67 66 8b 12          	mov    (%bp,%si),%dx
    8139:	67 66 89 14          	mov    %dx,(%si)
    813d:	c5 40 92             	lds    -0x6e(%eax),%eax
    8140:	00 00                	add    %al,(%eax)
    8142:	66 a1 90 92 67 66    	mov    0x66679290,%ax
    8148:	8b 55 e8             	mov    -0x18(%ebp),%edx
    814b:	67 66 8b 52 08       	mov    0x8(%bp,%si),%dx
    8150:	67 66 89 14          	mov    %dx,(%si)
    8154:	c5 44 92 00          	lds    0x0(%edx,%edx,4),%eax
    8158:	00 66 a1             	add    %ah,-0x5f(%esi)
    815b:	90                   	nop
    815c:	92                   	xchg   %eax,%edx
    815d:	66 83 c0 01          	add    $0x1,%ax
    8161:	66 a3 90 92 67 66    	mov    %ax,0x66679290
    8167:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
    816b:	74 15                	je     8182 <detect_memory+0x119>
    816d:	eb 01                	jmp    8170 <detect_memory+0x107>
    816f:	90                   	nop
    8170:	67 66 83 45 ec 01    	addw   $0x1,-0x14(%di)
    8176:	67 66 83 7d ec 09    	cmpw   $0x9,-0x14(%di)
    817c:	0f 8e 26 ff eb 01    	jle    1ec80a8 <_end+0x1ebee14>
    8182:	90                   	nop
    8183:	66 68 07 82          	pushw  $0x8207
    8187:	00 00                	add    %al,(%eax)
    8189:	66 e8 9e fe          	callw  802b <protect_mode_entry+0x11>
    818d:	ff                   	(bad)
    818e:	ff 66 83             	jmp    *-0x7d(%esi)
    8191:	c4 04 67             	les    (%edi,%eiz,2),%eax
    8194:	66 8d 65 f4          	lea    -0xc(%ebp),%sp
    8198:	66 5b                	pop    %bx
    819a:	66 5e                	pop    %si
    819c:	66 5f                	pop    %di
    819e:	66 5d                	pop    %bp
    81a0:	66 c3                	retw

000081a2 <start_load>:
    81a2:	66 55                	push   %bp
    81a4:	66 89 e5             	mov    %sp,%bp
    81a7:	66 83 ec 08          	sub    $0x8,%sp
    81ab:	66 68 0d 82          	pushw  $0x820d
    81af:	00 00                	add    %al,(%eax)
    81b1:	66 e8 76 fe          	callw  802b <protect_mode_entry+0x11>
    81b5:	ff                   	(bad)
    81b6:	ff 66 83             	jmp    *-0x7d(%esi)
    81b9:	c4 04 66             	les    (%esi,%eiz,2),%eax
    81bc:	e8 a8 fe ff ff       	call   8069 <detect_memory>
    81c1:	66 b8 1c 92          	mov    $0x921c,%ax
    81c5:	00 00                	add    %al,(%eax)
    81c7:	a3 36 92 66 b8       	mov    %eax,0xb8669236
    81cc:	1c 92                	sbb    $0x92,%al
    81ce:	00 00                	add    %al,(%eax)
    81d0:	66 c1 e8 10          	shr    $0x10,%ax
    81d4:	a3 38 92 66 b8       	mov    %eax,0xb8669238
    81d9:	05 80 00 00 66       	add    $0x66000080,%eax
    81de:	ff d0                	call   *%eax
    81e0:	eb fe                	jmp    81e0 <start_load+0x3e>

000081e2 <die>:
    81e2:	55                   	push   %ebp
    81e3:	89 e5                	mov    %esp,%ebp
    81e5:	eb fe                	jmp    81e5 <die+0x3>
